{"version":3,"sources":["App.js","book.js","doc.js","list.js","doctor.js","edit.js","dashboard.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","match","params","id","state","data","react_default","a","createElement","className","map","doc","href","npi","profile","first_name","middle_name","last_name","src","image_url","style","height","alt","title","specialties","uid","toUpperCase","React","Component","Book","input","setState","doctorId","doctor","Hospital","hospital","morning","min","max","afternoon","night","time","hours","Number","minutes","AMPM","sHours","toString","sMinutes","slot","_this2","val1","arguments","length","undefined","val2","today","Date","max_date","setDate","getDate","min_dd","max_dd","min_mm","getMonth","max_mm","min_yyyy","getFullYear","max_yyyy","maxDate","reqDate","document","getElementById","value","checkDate","utc1","UTC","utc2","diffDays","Math","floor","fetch","then","res","json","slots","split","i","max_online","online_max_quantity","Max","slotTimings","getHours","getMinutes","getSeconds","tConvert","Min","finalBook","_this3","react_transition_group","in","appear","timeout","classNames","color","backgroundColor","width","onClick","toggleInput","ref","form","float","type","name","required","padding","borderRadius","marginTop","borderColor","border","borderWidth","index","key","cursor","Doctor","fromList","showlicence","showDocList","show","doc_id","position","maxHeight","doc_img_url","doc_firstname","doc_middlename","doc_lastname","qualification","isHospital","onMouseEnter","onMouseLeave"," borderRadius","marginLeft","license_no","experience","margin","specialisation","skill","textDecoration","hospital_id","from_hospital","toggleDocList","doc_List","doc_fee","maxWidth","rank","address_line1","address_line2","city","pincode","overflow","marginBottom","link","$temp","$","append","val","select","execCommand","remove","alert","book","doctors","showPopup","showHospital","cities","currentCity","localStorage","lastCity","presentCities","Set","add","datas","forEach","childData","Array","from","values","popupData","selectCity","selectedCity","options","selectedIndex","setItem","onChange","onSelected","selected","doct","src_doc","closePopup","togglePopup","bind","editName","editQualification","editLicense","editExp","editFee","editAddress","editEmail","editPnone","editSkill","changed","setInterval","save","window","addEventListener","ev","preventDefault","returnValue","innerHtml","work","newDoctor","splice","skillIndex","opacity","marginRight","defaultValue","placeholder","isNaN","paddingLeft","textAlign","editSpecialization","landmark","doc_email","editPhone","doc_phone","edit","Boolean","location","hostname","ReactDOM","render","react_router_dom","react_router","path","component","dashboard","list","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ca03d03.chunk.js","sourcesContent":["import React from 'react';\n\n\n class App extends React.Component {\n  constructor(props){\n    super(props);\n    console.log(this.props.match.params.id);\n    this.state ={\n      data : []\n    }\n  }\n  componentWillMount(){\n\n    \n}  \n   render(){\n    return (\n      <div className=\"container\" >\n      {this.state.data.map(doc=>\n            <a href= {'/doctor/' + doc.npi}>\n            <div className=\" lp panel panel-primary\">\n            <div className=\"panel-heading\">\n             <h4>{doc.profile.first_name} {doc.profile.middle_name} {doc.profile.last_name}</h4>\n            </div>\n            <div className=\"panel-body\">\n            <div className=\"col-sm-4\">\n              <img src={doc.profile.image_url} style = {{height : \"100px\"}} alt = \"Doctor\"/>\n              </div>\n            <div className=\"col-sm-4\">\n              <h4>Tittle</h4>\n              <h6>{doc.profile.title}</h6></div>\n              <div className=\"col-sm-4\">\n              <h4>Type</h4>\n              <h6>{doc.specialties[0].uid.toUpperCase()}</h6></div>\n              </div>\n              </div></a>\n              )}\n              </div>\n            \n  );}\n}\n\nexport default App;\n","import React  from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './App.css';\r\n\r\nclass Book extends React.Component {\r\n  constructor(props)\r\n{\r\n  super(props);\r\n  this.state=\r\n  {\r\n    input : 0\r\n  }\r\n}\r\n  componentWillMount(){//setting the minimum date for booking appointment as today and hiding licence//\r\n    \r\nthis.setState({\r\n  doctorId:this.props.doctor,\r\n  Hospital:this.props.hospital,\r\n  morning:{\r\n    min:0,\r\n    max:23\r\n  },\r\n  afternoon:{\r\n    min:24,\r\n    max:32\r\n  },\r\n  night:{\r\n    min:33,\r\n    max:47\r\n  }\r\n});\r\n  }\r\n  tConvert(time) {\r\n  \r\n  let hours = Number(time.match(/^(\\d+)/)[1]);\r\n  let minutes = Number(time.match(/:(\\d+)/)[1]);\r\n  let AMPM = time.match(/\\s(.*)$/)[1];\r\n  if(AMPM === \"PM\" && hours<12) hours = hours+12;\r\n  if(AMPM === \"AM\" && hours===12) hours = hours-12;\r\n  let sHours = hours.toString();\r\n  let sMinutes = minutes.toString();\r\n  if(hours<10) sHours = \"0\" + sHours;\r\n  if(minutes<10) sMinutes = \"0\" + sMinutes;\r\n  return(sHours + \":\" + sMinutes);\r\n}\r\nfinalBook(slot)\r\n{\r\n\r\n}\r\n  toggleInput(val1=0,val2=0)\r\n  { \r\n    let today= new Date();\r\n    if(val1<0)\r\n      this.setState({\r\n        input:this.state.input-1\r\n      });\r\n    else\r\n    switch(this.state.input)\r\n    {\r\n      case 0:\r\n        \r\n        let max_date=new Date();\r\n        max_date.setDate(today.getDate()+7);\r\n        let min_dd = today.getDate(),max_dd=max_date.getDate();\r\n        let min_mm = today.getMonth()+1,max_mm=max_date.getMonth()+1; \r\n        let min_yyyy = today.getFullYear(),max_yyyy=max_date.getFullYear();\r\n         if(min_dd<10){\r\n                min_dd='0'+min_dd\r\n            } \r\n            if(min_mm<10){\r\n                min_mm='0'+min_mm\r\n            }\r\n          if(max_dd<10){\r\n                max_dd='0'+max_dd\r\n            } \r\n            if(max_mm<10){\r\n                max_mm='0'+max_mm\r\n            }\r\n        this.setState({\r\n          today : min_yyyy+'-'+min_mm+'-'+min_dd,\r\n          maxDate: max_yyyy+'-'+max_mm+'-'+max_dd,\r\n          input: 1\r\n        });\r\n      break;\r\n      case 1:\r\n        let reqDate=document.getElementById(this.state.doctorId+this.state.Hospital+\"date\").value;\r\n        if(reqDate===\"\")\r\n          break;\r\n        else{\r\n          let checkDate= new Date(reqDate);\r\n          const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n          let utc1 = Date.UTC(today.getFullYear(), today.getMonth(), today.getDate());\r\n          let utc2 = Date.UTC(checkDate.getFullYear(), checkDate.getMonth(), checkDate.getDate());\r\n          let diffDays=Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n          if(diffDays>7||diffDays<0)\r\n            break;\r\n        }\r\n            fetch('http://www.mocky.io/v2/5d150cf42f0000dac0c4f5c7')\r\n          .then(res => res.json())\r\n          .then((data) => {\r\n            data=data[0];\r\n            data.slots=data.data.split(\"\");\r\n            let max=47;\r\n            for(let i=0;i<48;i++)\r\n          {\r\n            if(data.slots[i]==='E')\r\n              max=i-1;\r\n          }\r\n            this.setState({\r\n              slots:data.slots,\r\n              max_online:data.online_max_quantity,\r\n              Max:max});\r\n          });\r\n        let slotTimings=[\"12:00 AM\",\"12:30 AM\",\"01:00 AM\",\"01:30 AM\",\"02:00 AM\",\"02:30 AM\",\"03:00 AM\",\"03:30 AM\",\"04:00 AM\",\"04:30 AM\",\"05:00 AM\",\"05:30 AM\",\"06:00 AM\",\"06:30 AM\",\"07:00 AM\",\"07:30 AM\",\r\n                     \"08:00 AM\",\"08:30 AM\",\"09:00 AM\",\"09:30 AM\",\"10:00 AM\",\"10:30 AM\",\"11:00 AM\",\"11:30 AM\",\"12:00 PM\",\"12:30 PM\",\"01:00 PM\",\"01:30 PM\",\"02:00 PM\",\"02:30 PM\",\"03:00 PM\",\"03:30 PM\",\"04:00 PM\",\"04:30 PM\",\"05:00 PM\",\"05:30 PM\",\"06:00 PM\",\"06:30 PM\",\"07:00 PM\",\"07:30 PM\",\r\n                     \"08:00 PM\",\"08:30 PM\",\"09:00 PM\",\"09:30 PM\",\"10:00 PM\",\"10:30 PM\",\"11:00 PM\",\"11:30 PM\"];\r\n        let time = today.getHours() + \":\" + (today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes())+ \":\" + today.getSeconds();\r\n        let min=0;\r\n\r\n        if(this.state.today===reqDate)\r\n        for(let i=0;i<48;i++)\r\n          {\r\n              let str = this.tConvert(slotTimings[i]);\r\n              if(str>time)\r\n              {\r\n                min=i;\r\n                break;\r\n              }\r\n          }\r\n      \t\r\n        this.setState({\r\n          input: 2,\r\n          slotTimings:slotTimings,\r\n          Min:min\r\n        });\r\n        break;\r\n      case 2:\r\n        this.setState({\r\n          input: 3,\r\n          min:this.state.Min>val1?this.state.Min:val1,\r\n          max:this.state.Max<val2?this.state.Max:val2,\r\n        });\r\n        break;\r\n      case 3:\r\n        this.finalBook(val1);\r\n        this.setState({\r\n          input: 4});\r\n        break;\r\n\r\n      default : ;\r\n    }\r\n  }\r\n  render() {\r\n    return(<CSSTransition\r\n    in={true}\r\n    appear={true}\r\n    timeout={500}\r\n    classNames=\"fade\"\r\n    >\r\n    <span className=\"booking row\">\r\n      {this.state.input===0?\r\n      <span className=\"btn\" style={{\"color\":\"white\",\"backgroundColor\":\"#1DA6FD\",\"width\":\"100%\"}} onClick={()=>{this.toggleInput()}}>Book Apointment</span>\r\n      :\r\n      this.state.input===1?\r\n      <form id={\"book\"} ref={form => this.form = form}>\r\n      <span style={{\"float\":\"left\",\"width\":\"80%\"}}><input type=\"date\" style={{\"width\":\"100%\"}}  id={this.state.doctorId+this.state.Hospital+\"date\"} max={this.state.maxDate} min={this.state.today} name=\"date\" required={true}/></span>\r\n      <span className=\"btn\" style={{\"color\":\"white\",\"backgroundColor\":\"#1DA6FD\",\"float\":\"right\",\"width\":\"20%\",\"padding\":\"2px\",\"borderRadius\":\"0px 3px 3px 0px\"}} onClick={()=>{this.toggleInput()}}><i className=\"fas fa-sign-in-alt\"></i></span>\r\n      </form>:\r\n      this.state.input===2?\r\n      <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames=\"fade\"\r\n      >\r\n      <div>\r\n          {this.state.Min<=this.state.morning.max&&this.state.Max>=this.state.morning.min?<span className=\"btn\" style={{\"color\":\"#1DA6FD\",\"backgroundColor\":\"white\",\"width\":\"100%\",\"marginTop\":\"3px\",\"borderColor\":\"#1DA6FD\"}} onClick={()=>{this.toggleInput(this.state.morning.min,this.state.morning.max)}}>Morning</span>:null}\r\n          {this.state.Min<=this.state.afternoon.max&&this.state.Max>=this.state.afternoon.min?<span className=\"btn\" style={{\"color\":\"#1DA6FD\",\"backgroundColor\":\"white\",\"width\":\"100%\",\"marginTop\":\"3px\",\"borderColor\":\"#1DA6FD\"}} onClick={()=>{this.toggleInput(this.state.afternoon.min,this.state.afternoon.max)}}>Afternoon</span>:null}\r\n          {this.state.Min<=this.state.night.max&&this.state.Max>=this.state.night.min?<span className=\"btn\" style={{\"color\":\"#1DA6FD\",\"backgroundColor\":\"white\",\"width\":\"100%\",\"marginTop\":\"3px\",\"borderColor\":\"#1DA6FD\"}} onClick={()=>{this.toggleInput(this.state.night.min,this.state.night.max)}}>Night</span>:null}\r\n          <span className=\"btn\" style={{\"color\":\"black\",\"backgroundColor\":\"white\",\"width\":\"100%\",\"marginTop\":\"3px\",\"borderColor\":\"black\"}} onClick={()=>{this.toggleInput(-1)}}><i className=\"fas fa-chevron-left\"></i></span>\r\n      </div></CSSTransition>:\r\n      this.state.input===3?\r\n      <div style={{\"border\":\"solid\",\"borderRadius\":\"10px\",\"borderWidth\":\"1px\",\"borderColor\":\"#5d00ff\",\"padding\":\"3px\"}}>\r\n      {this.state.slotTimings.map((time,index)=>\r\n        index>=this.state.min&&index<=this.state.max&&this.state.slots[index]!=='0'?(this.state.slots[index]<this.state.max_online || this.state.slots[index]==='A')?\r\n        <div key={index} className=\"col-xs-6 col-sm-4 col-md-4 btn\" style={{\"color\":\"#1DA6FD\",\"padding\":\"5px\"}} onClick={()=>{this.toggleInput(index)}}>{time}({this.state.slots[index]})</div>\r\n        :<div key={index} className=\"col-xs-6 col-sm-4 col-md-4 btn disabled\" style={{\"color\":\"grey\",\"padding\":\"5px\"}}>{time}(full)</div>\r\n        :null\r\n      )\r\n      }<span className=\"btn\" style={{\"color\":\"black\",\"backgroundColor\":\"white\",\"width\":\"100%\",\"marginTop\":\"3px\",\"borderColor\":\"black\"}} onClick={()=>{this.toggleInput(-1)}}><i className=\"fas fa-chevron-left\"></i></span>\r\n      </div>:\r\n      <span className=\"btn\" style={{\"color\":\"grey\",\"backgroundColor\":\"white\",\"width\":\"100%\",\"marginTop\":\"3px\",\"borderColor\":\"grey\",\"cursor\":\"not-allowed\"}}>Booked</span>\r\n      }\r\n    </span></CSSTransition>);\r\n  }\r\n}\r\n\r\nexport default Book;","import React  from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './App.css';\r\nimport Book from './book';\r\nimport $ from 'jquery';\r\nclass Doctor extends React.Component {\r\nconstructor(props)\r\n{\r\n  super(props);\r\n  this.state={\r\n    doctor : this.props.doctor,\r\n    fromList: this.props.fromList\r\n  };\r\n}\r\n  componentWillMount(){//setting the minimum date for booking appointment as today and hiding licence//\r\n    \r\nthis.setState({\r\n  showlicence : 0,\r\n  showDocList : false\r\n\r\n});\r\n\r\n  }\r\n  componentDidMount(){//reseting form and making the popup center aligned//\r\n  }\r\n  toggleDocList()\r\n  {\r\n    this.setState({\r\n      showDocList : !this.state.showDocList\r\n    });\r\n  }\r\n  toggleLicence(show){//this function hides and shows the licence of the doctor//\r\n    this.setState({\r\n      showlicence : show\r\n    })\r\n  }\r\n  render() {\r\n    \r\n    //checks that the data recieved is a hospital or not\r\n    return (<div id={this.state.doctor.doc_id}  className=\"col-xs-12 cont\" style={{\"position\":\"relative\"}} >\r\n{/*dipslaying data over bootstrap cards    */}\r\n\r\n<div className=\"thumbnail\">\r\n<div className=\"row\">\r\n<div className=\"col-sm-3\"><div className=\"crop\" style={{\"maxHeight\":\"250px\"}}><img src={this.state.doctor.doc_img_url} alt=\"\"  className=\"image\"/></div></div>\r\n<div className=\"col-sm-5\">\r\n<div className=\"caption\">\r\n<h2 className=\"txt\">{this.state.doctor.doc_firstname} {this.state.doctor.doc_middlename} {this.state.doctor.doc_lastname}</h2>\r\n<h4 className=\"txt\">\r\n<span style={{\"color\":\"#1DA6FD\"}}>{this.state.doctor.qualification}</span>\r\n</h4>\r\n{this.state.doctor.isHospital===0?\r\n<div>\r\n<span id=\"ver\" onMouseEnter={()=>{this.setState({\r\n      showlicence : 1\r\n    })}} onMouseLeave={()=>{this.setState({\r\n      showlicence : 0\r\n    })}}><img alt=\"\" style={{\"width\": \"20px\",\"height\": \"20px\",\" borderRadius\": \"10px\"}} src={\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678134-sign-check-512.png\"}/><span style={{\"color\":\" #cccccc\"}}>Verified</span>{this.state.showlicence ?<span id=\"licence\" style={{\" borderRadius\": \"3px\", \"marginLeft\":\"5px\", \"backgroundColor\": \"#cccccc\",\"color\": \"black\", \"padding\": \"5px\"}}>License : {this.state.doctor.license_no}</span>: null}</span>\r\n<p><i className=\"far fa-star\" style={{\"padding\":\"3px\"}}></i>{this.state.doctor.experience} Years of Experience</p>\r\n</div>:<h4 style={{\"margin\":\"5px 0px 0px 0px\"}}>Departments</h4>}\r\n<div className=\"row\">\r\n{\r\n  this.state.doctor.specialisation.map(skill=>\r\n    <span key={skill} className=\"skill\">{skill}</span>)\r\n}</div> \r\n<br/>\r\n<p style={{\"textDecoration\": \"underline\",\"cursor\": \"pointer\"}}><a href={this.state.fromList?('#'+this.state.doctor.hospital_id):(\"/doctor/\"+this.state.doctor.hospital_id)}>{this.state.doctor.hospital}</a></p>\r\n\r\n{\r\n  this.state.doctor.from_hospital===1?\r\n                    !this.state.showDocList?\r\n                    <span className=\"btn\" onClick={()=>{this.toggleDocList()}} style={{\"backgroundColor\":\"white\",\"color\":\"#1DA6FD\",\"borderColor\":\"#1DA6FD\",\"marginTop\":\"5px\"}}>All Doctors <i className=\"fas fa-chevron-down\"></i></span>\r\n                    :\r\n                    <CSSTransition\r\n                    in={true}\r\n                    appear={true}\r\n                    key={this.state.doctor.doc_id}\r\n                    timeout={500}\r\n                    classNames=\"drop\">\r\n                    <div>\r\n                    <span className=\"btn\" onClick={()=>{this.toggleDocList()}} style={{\"backgroundColor\":\"white\",\"color\":\"#1DA6FD\",\"borderColor\":\"#1DA6FD\",\"marginTop\":\"5px\"}}>Hide Doctors <i className=\"fas fa-chevron-up\"></i></span>\r\n                    <br/>\r\n                    <br/>\r\n                    <h5>Doctors</h5>\r\n                    {this.state.doctor.doc_List.length>0?this.state.doctor.doc_List.map(doc=>\r\n                    <div key={doc.doc_id}><div style={{\"border\": \"solid\",\"borderColor\": \"grey\",\"borderWidth\": \"1px 0px 1px 0px\",\"padding\": \"0px 0px 5px 0px\"}}>\r\n                    <div>\r\n                        <div className=\"col-md-4\"><img alt=\"Doctor\"  src={doc.doc_img_url} style={{\"marginTop\": \"10px\",\"width\": \"75px\",\"height\": \"75px\",\"borderRadius\": \"75px\",\"border\": \"solid\"}}/></div>\r\n                          <div className=\"col-md-8\" style={{\"padding\": \"0px 5px 5px 5px\"}}>\r\n                            <h6>{doc.doc_firstname+\" \"+doc.doc_middlename+\" \"+doc.doc_lastname}<a href={this.state.fromList?('#'+doc.doc_id):(\"/doctor/\"+doc.doc_id)}><i className=\"fas fa-info-circle btn\"></i></a></h6>\r\n                            <p>{doc.qualification}<br/>{doc.specialisation}<br/>₹{doc.doc_fee}</p></div>\r\n                        <center ><span style={{\"maxWidth\":\"320px\"}}><a href={\"/doctor/\"+doc.doc_id}><span className=\"btn\" style={{\"color\":\"white\",\"backgroundColor\":\"#5d00ff\"}}>Book</span></a>\r\n      </span></center>\r\n                    </div>\r\n                    </div>\r\n                    </div>)\r\n                    :\r\n                    <center>\r\n                      <p style={{\"color\": \"gray\"}}>*No doctors list Available*</p>\r\n                    </center>\r\n                    }\r\n                </div></CSSTransition>\r\n                :null\r\n}  \r\n</div>\r\n</div>\r\n<div className=\"col-sm-4\" style={{\"marginTop\":\"10px\"}}>\r\n  <p ><i className=\"far fa-thumbs-up\"></i>{this.state.doctor.rank}</p>\r\n  <p style={{\"color\":\"green\"}}><i className=\"fas fa-rupee-sign\"></i>{this.state.doctor.doc_fee}</p>\r\n  <div>\r\n                  <i className=\"fas fa-map-marker-alt\"></i>\r\n                  <span style={{\"padding\": \"10px\"}}>\r\n                    {this.state.doctor.address_line1}<br/>\r\n                    {this.state.doctor.address_line2}<br/>\r\n                    {this.state.doctor.city}-{this.props.doctor.pincode}<br/>\r\n                  </span><br/>\r\n                  <br/>\r\n                  <p style={{\"color\": \"gray\"}}>Note : Timings may vary slightly depending upon the number of patients and availability of doctor.</p>\r\n                </div>\r\n                <br/>\r\n<p style={{\"color\":\"#800080\"}}>*No Booking Charges Applied*</p>\r\n</div>\r\n</div>\r\n<div style={{\"overflow\":\"hidden\",\"width\":\"100%\"}}>\r\n  <div className=\"foot\" style={{\"width\":\"100%\"}}>\r\n  <center>\r\n  <div className=\"col-md-4  col-sm-3\">\r\n  </div>\r\n  <div className=\"col-md-4  col-sm-3\">\r\n  <span className=\"btn\" style={{\"color\":\"black\",\"width\":\"100%\",\"backgroundColor\":\"white\",\"borderColor\":\"black\",\"marginBottom\":\"5px\"}} onClick={()=>{let link=\"http://localhost:3000/doctor/\"+this.state.doctor.doc_id; var $temp = $(\"<input>\");\r\n  $(\"body\").append($temp);\r\n  $temp.val(link).select();\r\n  document.execCommand(\"copy\");\r\n  $temp.remove();document.execCommand(\"copy\");alert(\"Link to the doctor copied!\");}}><i className=\"fas fa-share-alt\"></i> Share</span>\r\n  </div>\r\n  <div className=\"col-md-4 col-sm-6\" >\r\n  <div style={{}}>\r\n  {this.state.fromList?<a href={\"/doctor/\"+this.state.doctor.doc_id}><span className=\"btn\" style={{\"color\":\"white\",\"backgroundColor\":\"#5d00ff\",\"width\":\"100%\"}}>Book</span></a>\r\n      :\r\n  <Book doctor={this.state.doctor.doc_id} style={{}} />}</div></div></center>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Doctor;","import React , {Component}  from 'react';\nimport {CSSTransition} from 'react-transition-group';\nimport './App.css';\nimport Doctor from './doc';\n\nclass App extends Component\n{\nconstructor(props)\n{\n  super(props);\n  this.state=\n  {\n   doctors: [],\n   showPopup : 0,\n   showHospital :0,\n   cities : [],\n   currentCity : localStorage.lastCity!=null?localStorage.lastCity :\"All\"\n  };\n}\n\n//fetching data from api//\n\ncomponentWillMount() {\n  let presentCities = new Set();\n  presentCities.add(\"All\");\n  fetch('http://www.mocky.io/v2/5d1483282f00007405c4f13d')\n  .then(res => res.json())\n  .then((datas) => {\n     datas.forEach((data)=>{//analyzing the recieced data setting up hospital lists for hospitals ,getting all the cities etc\n        if((data.from_hospital===1))\n          {\n            data.isHospital=1;\n            data.doc_List=[];\n            \n            datas.forEach((childData)=>{\n            \n              if((childData.doc_id!==childData.hospital_id)&&(childData.hospital_id===data.hospital_id))\n              {\n                data.doc_List[data.doc_List.length]=childData;\n                childData.hospital=data.doc_firstname+\" \"+data.doc_middlename+\" \"+data.doc_lastname;\n              }\n            });\n          }\n        else\n          data.isHospital=0;\n        data.specialisation=data.specialisation.split(\",\");\n        presentCities.add(data.city);\n\n      });\n     \n    this.setState({ doctors: datas,\n      cities: Array.from(presentCities.values())});\n   \n  });\n  \n\n}\ntoggleCurrentCity(city){//changes the city on click\n  if(this.state.currentCity!==city)\nthis.setState({\n    currentCity : city\n  });\n  \n}\n\ntogglePopup(data=null,show=this.state.showHospital) {//manages showing and hidding of data and setups data for the popup\n  \n  if(this.state.showPopup===0)\n    {this.setState({\n      popupData : data\n    });\n    this.setState({\n      showPopup: !this.state.showPopup\n    });}\n    if(data!==null)\n    {\n      this.setState({\n      popupData : data\n    });\n    }\n\n\n  }\n  onSelected(){\n    let selectCity = document.getElementById(\"selectCity\");\n    let selectedCity = selectCity.options[selectCity.selectedIndex].value;\n    localStorage.setItem('lastCity', selectedCity);\n  }\n  componentDidMount() {\n      document.getElementById(\"selectCity\").value=this.state.currentCity;\n  }\n\nrender()\n{\n \nconst doctors=this.state.doctors;\nreturn(\n<div className=\"container\" style={{\"marginTop\":\"5px\"}} >\n<div className=\"container\" >\n<div style={{\"backgroundColor\":\"rgba(0,0,0,0.1)\",\"padding\":\"10px\",\"maxWidth\":\"200px\",\"borderRadius\":\"10px\",\"marginLeft\":\"15px\"}}>\n <select id=\"selectCity\" className=\"form-control\" style={{\"maxWidth\":\"180px\"}} onChange={()=>{this.onSelected();}}>\n \n{this.state.cities.map(city=><option key={city} value={city} selected={city===this.state.currentCity?\"selected\":\"\"}>{city}</option>)}\n\n</select></div>\n</div>\n<br/>\n{\ndoctors.map(doct =><div key={doct.doc_id}>{(doct.city === this.state.currentCity||\"All\" === this.state.currentCity)?\n    <CSSTransition\n    in={true}\n    appear={true}\n    timeout={500}\n    classNames=\"fade\"\n    >\n    <Doctor\n            doctor={doct}\n            fromList={true}\n            closePopup={this.togglePopup.bind(this)}\n          />\n          </CSSTransition>:\nnull}</div>\n\n\n  )\n}\n\n\n\n\n</div>\n\n\n);\n}\n}\n\nexport default App;\n","import React , {Component}  from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './App.css';\r\nimport Doctor from './doc';\r\nclass App extends Component\r\n{\r\nconstructor(props)\r\n{\r\n  super(props);\r\n  this.state=\r\n  {\r\n   doctor: null\r\n  };\r\n}\r\n\r\n//fetching data from api//\r\n\r\ncomponentWillMount() {\r\n  fetch('http://www.mocky.io/v2/5d1483282f00007405c4f13d')\r\n  .then(res => res.json())\r\n  .then((datas) => {\r\n     datas.forEach((data)=>{//analyzing the recieced data setting up hospital lists for hospitals ,getting all the cities etc\r\n     \tif(data.doc_id===this.props.match.params.id)\r\n     \t{\r\n        if((data.from_hospital===1))\r\n          {\r\n            data.isHospital=1;\r\n            data.doc_List=[];\r\n            \r\n            datas.forEach((childData)=>{\r\n            \r\n              if((childData.doc_id!==childData.hospital_id)&&(childData.hospital_id===data.hospital_id))\r\n              {\r\n                data.doc_List[data.doc_List.length]=childData;\r\n              }\r\n            });\r\n          }\r\n        else\r\n          data.isHospital=0;\r\n        data.specialisation=data.specialisation.split(\",\");\r\n        this.setState({ doctor: data});\r\n        \r\n        }\r\n\r\n      });\r\n     \r\n    \r\n   \r\n  });\r\n  \r\n\r\n}\r\nrender()\r\n{\r\n \r\nconst doctor=this.state.doctor;\r\nreturn(\r\n<div className=\"container\" style={{\"marginTop\":\"5px\"}} >\r\n<br/>\r\n\t{doctor!==null?\r\n    <CSSTransition\r\n    in={true}\r\n    appear={true}\r\n    timeout={500}\r\n    classNames=\"fade\"\r\n    >\r\n    <Doctor\r\n            doctor={doctor}\r\n            fromList={false}\r\n          />\r\n          </CSSTransition>:null}\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n);\r\n}\r\n}\r\n\r\nexport default App;\r\n","import React  from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './App.css';\r\nclass Doctor extends React.Component {\r\nconstructor(props)\r\n{\r\n  super(props);\r\n  this.state={\r\n    doctor : this.props.doctor,\r\n    fromList: this.props.fromList\r\n  };\r\n}\r\n  componentWillMount(){//setting the editing of each part to false//\r\n    \r\nthis.setState({\r\n  showlicence : 1,\r\n  showDocList : true,\r\n  editName:false,\r\n  editQualification:false,\r\n  editLicense: false,\r\n  editExp:false,\r\n  editFee:false,\r\n  editAddress:false,\r\n  editEmail:false,\r\n  editPnone:false,\r\n  editSkill:false,\r\n  changed:false\r\n});\r\n\r\n  }\r\n  componentDidMount(){//setting function to save the changed data in every 10 seconds and preventing tab closing for unsaved data//\r\n    setInterval(() => {\r\n      this.save();\r\n    }, 10000);\r\n    window.addEventListener(\"beforeunload\", (ev) => \r\n    {  \r\n        \r\n        if(this.state.changed){ev.preventDefault();\r\n        return ev.returnValue = 'There is unsaved data on the page\\nAre you sure you want to close?';}\r\n    });\r\n  }\r\n  save(){//this function is responsible for saving the data\r\n    if(this.state.changed)\r\n    {\r\n      document.getElementById(\"save\").innerHtml=\"Saving\";\r\n      console.log(\"api called\");\r\n      this.setState(\r\n        {changed: false});\r\n    }\r\n  }\r\n  editSpecialization(work,index=this.state.doctor.specialisation.length){//this function handles the editing of skills\r\n    switch(work)\r\n    {\r\n      case 0:\r\n        let newDoctor=this.state.doctor;\r\n        newDoctor.specialisation.splice(index,1);\r\n        this.setState({\r\n          doctor:newDoctor,\r\n          changed:1\r\n        });\r\n        break;\r\n      case 1:\r\n        this.setState({\r\n          editSkill:true,\r\n          skill:null,\r\n          skillIndex:index\r\n        });\r\n        break;\r\n      case 2:\r\n        this.setState({\r\n          editSkill:true,\r\n          skill:this.state.doctor.specialisation[index],\r\n          skillIndex:index\r\n        });\r\n        break;\r\n      default: ;\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.state);\r\n    //checks that the data recieved is a hospital or not\r\n    return (\r\n  \r\n    <div id={this.state.doctor.doc_id}  className=\"container\" style={{\"position\":\"relative\"}} >\r\n      {/*dipslaying data over bootstrap cards    */}\r\n    \r\n      <div className=\"thumbnail\">\r\n         <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n               <div className=\"crop\" style={{\"maxHeight\":\"250px\"}}><img src={this.state.doctor.doc_img_url} alt=\"\"  className=\"image\"/></div>\r\n            </div>\r\n            <div className=\"col-sm-5\">\r\n               <div className=\"caption\">\r\n                  {this.state.editName===false?\r\n                  <h2 className=\"txt\" onClick={()=>{this.setState({editName:true})}}>{this.state.doctor.doc_firstname+\" \"+this.state.doctor.doc_middlename+\" \"+this.state.doctor.doc_lastname} <i style={{\"opacity\":\"0.5\",\"cursor\":\"pointer\"}} className=\"fas fa-pencil-alt\"></i></h2>\r\n                  :\r\n                  <center className=\"row\" style={{\"marginLeft\":\"0px\",\"marginRight\":\"0px\",\"marginTop\":\"10px\"}}>\r\n                    <div className=\"row\">\r\n                      <label  className=\"col-md-5 offset-md-2 col-sm-6\">First Name :</label>\r\n                      <input id={\"fName\"} className=\"col-md-5 col-sm-6\" defaultValue={this.state.doctor.doc_firstname} placeholder=\"First Name\"/>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                      <label  className=\"col-md-5 offset-md-2 col-sm-6\">Middle Name :</label>\r\n                      <input className=\"col-md-5 col-sm-6\"  id={\"mName\"} defaultValue={this.state.doctor.doc_middlename} placeholder=\"Middle Name\"/>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                      <label  className=\"col-md-5 offset-md-2 col-sm-6\">Last Name :</label>\r\n                      <input  id={\"lName\"} className=\"col-md-5 col-sm-6\" defaultValue={this.state.doctor.doc_lastname} placeholder=\"Last Name\"/>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"col-md-2 col-md-offset-10 col-sm-offset-6 col-sm-6 col-xs-12 btn\" onClick={()=>{\r\n                        let newDoctor=this.state.doctor;\r\n                        newDoctor.doc_lastname=document.getElementById(\"lName\").value;\r\n                        newDoctor.doc_middlename=document.getElementById(\"mName\").value;\r\n                        newDoctor.doc_firstname=document.getElementById(\"fName\").value;\r\n                        this.setState({doctor:newDoctor,changed:true,editName:false})}} style={{\"marginTop\":\"10px\",\"color\":\"white\",\"backgroundColor\":\"#1DA6FD\",\"padding\":\"2px\",\"borderRadius\":\"3px 3px 3px 3px\"}}><i className=\"fas fa-check\"></i>\r\n                     </div>\r\n                  </center>\r\n                  }\r\n                  {!this.state.editQualification?\r\n                  <h4 className=\"txt\" onClick={()=>{this.setState({editQualification:true})}}>\r\n                     <span style={{\"color\":\"#1DA6FD\"}}>{this.state.doctor.qualification} <i style={{\"opacity\":\"0.5\",\"cursor\":\"pointer\"}}  className=\"fas fa-pencil-alt\"></i></span>\r\n                  </h4>\r\n                  :\r\n                  <center className=\"row\" style={{\"marginLeft\":\"0px\",\"marginRight\":\"0px\"}}>\r\n                     <label style={{\"float\":\"left\"}}>Qualification :</label><br/><input id={\"qualification\"} className=\"col-md-10 col-sm-8\" style={{\"marginTop\":\"5px\",\"marginBottom\":\"5px\"}} defaultValue={this.state.doctor.qualification} placeholder=\"Your Qualification\"/>\r\n                     <div className=\"col-md-2 col-sm-4 col-xs-12 btn\" onClick={()=>{\r\n                        let newDoctor=this.state.doctor;\r\n                        newDoctor.qualification=document.getElementById(\"qualification\").value;\r\n                        this.setState({doctor:newDoctor,changed:true,editQualification:false})}} style={{\"marginTop\":\"5px\",\"marginBottom\":\"5px\",\"color\":\"white\",\"backgroundColor\":\"#1DA6FD\",\"padding\":\"2px\",\"borderRadius\":\"0px 3px 3px 0px\"}}><i className=\"fas fa-check\"></i>\r\n                     </div>\r\n                  </center>\r\n                  }\r\n                  {this.state.doctor.isHospital===0?\r\n                  <div>\r\n                     <span id=\"ver\">\r\n                        <span id=\"licence\" style={{\" borderRadius\": \"3px\",\"float\":\"left\",\"backgroundColor\": \"#cccccc\",\"color\": \"black\", \"padding\": \"5px\"}}><label style={{\"marginTop\":\"2px\"}}>License : </label>{!this.state.editLicense?<span onClick={()=>{this.setState({editLicense:true})}}>{this.state.doctor.license_no}  <i style={{\"opacity\":\"0.5\",\"cursor\":\"pointer\"}}  className=\"fas fa-pencil-alt\"></i></span>:\r\n                        <center className=\"row\" style={{\"float\":\"right\",\"margin\":\"0px\"}}>\r\n                           <input type=\"number\" id={\"licenseNo\"} className=\"col-xs-8\" defaultValue={this.state.doctor.license_no} placeholder=\"License No.\"/>\r\n                           <div className=\"col-xs-4 btn\" onClick={()=>{\r\n                              if(isNaN(document.getElementById(\"licenseNo\").value))\r\n                              return;\r\n                              let newDoctor=this.state.doctor;\r\n                              newDoctor.license_no=document.getElementById(\"licenseNo\").value;\r\n                              this.setState({doctor:newDoctor,changed:true,editLicense:false})}} style={{\"color\":\"#1DA6FD\",\"padding\":\"2px\",\"borderRadius\":\"0px 3px 3px 0px\"}}><i className=\"fas fa-check\"></i>\r\n                           </div>\r\n                        </center>\r\n                        }\r\n                     </span>\r\n                     </span>\r\n                     <br/>\r\n                     <br/>\r\n                     {!this.state.editExp?\r\n                     <p onClick={()=>{this.setState({editExp:true})}}><i className=\"far fa-star\" style={{\"padding\":\"3px\"}}></i>{this.state.doctor.experience} <i style={{\"opacity\":\"0.3\",\"cursor\":\"pointer\"}} className=\"fas fa-pencil-alt\"></i> Years of Experience</p>\r\n                     :\r\n                     <center className=\"row\" style={{\"margin\":\"0px\"}}>\r\n                        <label className=\"col-md-4 col-sm-12\" style={{\"marginLeft\":\"0px\",\"paddingLeft\":\"0px\",\"textAlign\":\"left\"}}>Experience :</label><input type=\"number\" id={\"Exp\"} className=\"col-sm-6 col-xs-8\" defaultValue={this.state.doctor.experience} placeholder=\"Experience\"/>\r\n                        <div className=\"col-sm-2 col-xs-4 btn\" onClick={()=>{\r\n                           if(isNaN(document.getElementById(\"Exp\").value))\r\n                           return;\r\n                           else{\r\n                           let newDoctor=this.state.doctor;\r\n                           newDoctor.experience=document.getElementById(\"Exp\").value;\r\n                           this.setState({doctor:newDoctor,changed:true,editExp:false})}}} style={{\"color\":\"white\",\"backgroundColor\":\"green\",\"padding\":\"2px\",\"borderRadius\":\"0px 3px 3px 0px\"}}><i className=\"fas fa-check\"></i>\r\n                        </div>\r\n                     </center>\r\n                     }\r\n                  </div>\r\n                  :<h4 style={{\"margin\":\"5px 0px 0px 0px\"}}>Departments</h4>}\r\n                  <div className=\"row\">\r\n                     {\r\n                     this.state.doctor.specialisation.map((skill,index)=>\r\n                     index!==this.state.skillIndex?\r\n                     <div key={skill} className=\"skill\" style={{\"padding\":\"0px\"}}><span  onClick={()=>{this.editSpecialization(2,index)}} className=\"far fa-edit\" style={{\"cursor\":\"pointer\",\"padding\":\"10px\",\"backgroundColor\":\"green\",\"color\":\"white\",\"borderRadius\":\"3px 0px 0px 3px\",\"margin\":\"-1px\"}}></span><span style={{\"padding\":\"10px\"}}>{skill}</span><span onClick={()=>{this.editSpecialization(0,index)}} className=\"far fa-trash-alt\" style={{\"cursor\":\"pointer\",\"padding\":\"10px\",\"backgroundColor\":\"green\",\"color\":\"white\",\"borderRadius\":\"0px 3px 3px 0px\",\"margin\":\"-1px\"}}></span></div>\r\n                     :null)\r\n                     }\r\n                     {!this.state.editSkill?\r\n                     <div  onClick={()=>{this.editSpecialization(1)}} className=\"skill\" style={{\"backgroundColor\":\"green\",\"color\":\"white\",\"padding\":\"6px\",\"cursor\":\"pointer\"}}><i className=\"fas fa-plus\"></i></div>\r\n                     :\r\n                     <div className=\"skill\" style={{\"backgroundColor\":\"green\",\"color\":\"black\",\"padding\":\"0px\"}}><input style={{\"width\":\"150px\",\"marginLeft\":\"5px\"}} defaultValue={this.state.skill} id={\"skill\"}/><span onClick={()=>{\r\n                        let newDoctor=this.state.doctor;\r\n                        newDoctor.specialisation[this.state.skillIndex]=document.getElementById(\"skill\").value;\r\n                        this.setState({\r\n                        doctor:newDoctor,\r\n                        changed:true,\r\n                        editSkill:false,\r\n                        skill:null,\r\n                        skillIndex:null\r\n                        });\r\n                        }} className=\"fas fa-check\" style={{\"cursor\":\"pointer\",\"padding\":\"10px\",\"backgroundColor\":\"green\",\"color\":\"white\",\"borderRadius\":\"0px 3px 3px 0px\",\"margin\":\"-1px\"}}></span>\r\n                     </div>\r\n                     }\r\n                  </div>\r\n                  <br/>\r\n                  <p style={{\"textDecoration\": \"underline\",\"cursor\": \"pointer\"}}><a href={this.state.fromList?('#'+this.state.doctor.hospital_id):(\"/doctor/\"+this.state.doctor.hospital_id)}>{this.state.doctor.hospital}</a></p>\r\n                  {\r\n                  this.state.doctor.from_hospital===1?\r\n                  <CSSTransition\r\n                     in={true}\r\n                     appear={true}\r\n                     key={this.state.doctor.doc_id}\r\n                     timeout={500}\r\n                     classNames=\"drop\">\r\n                     <div>\r\n                        <br/>\r\n                        <h5>Doctors</h5>\r\n                        {this.state.doctor.doc_List.length>0?this.state.doctor.doc_List.map(doc=>\r\n                        <div key={doc.doc_id}>\r\n                           <div style={{\"border\": \"solid\",\"borderColor\": \"grey\",\"borderWidth\": \"1px 0px 1px 0px\",\"padding\": \"0px 0px 5px 0px\"}}>\r\n                           <div>\r\n                              <div className=\"col-md-4\"><img alt=\"Doctor\"  src={doc.doc_img_url} style={{\"marginTop\": \"10px\",\"width\": \"75px\",\"height\": \"75px\",\"borderRadius\": \"75px\",\"border\": \"solid\"}}/></div>\r\n                              <div className=\"col-md-8\" style={{\"padding\": \"0px 5px 5px 5px\"}}>\r\n                              <h6>{doc.doc_firstname+\" \"+doc.doc_middlename+\" \"+doc.doc_lastname}<a href={this.state.fromList?('#'+doc.doc_id):(\"/doctor/\"+doc.doc_id)}><i className=\"fas fa-info-circle btn\"></i></a></h6>\r\n                              <p>{doc.qualification}<br/>{doc.specialisation}<br/>₹{doc.doc_fee}</p>\r\n                           </div>\r\n                           <center ><span style={{\"maxWidth\":\"320px\"}}><a href={\"/doctor/\"+doc.doc_id}><span className=\"btn\" style={{\"color\":\"white\",\"backgroundColor\":\"#5d00ff\"}}>Book</span></a>\r\n                              </span>\r\n                           </center>\r\n                        </div>\r\n                     </div>\r\n               </div>\r\n               )\r\n               :\r\n               <center>\r\n               <p style={{\"color\": \"gray\"}}>*No doctors list Available*</p>\r\n               </center>\r\n               }\r\n               <div className=\"btn\" style={{\"color\":\"#1DA6FD\",\"padding\":\"5px\",\"width\":\"100%\"}}><i className=\"far fa-plus-square\"></i> Add Doctor</div>\r\n            </div>\r\n            </CSSTransition>\r\n            :null\r\n            }  \r\n         </div>\r\n      </div>\r\n      <div className=\"col-sm-4\" style={{\"marginTop\":\"10px\"}}>\r\n         <p ><i className=\"far fa-thumbs-up\"></i>{this.state.doctor.rank}</p>\r\n         {!this.state.editFee?\r\n         <p onClick={()=>{this.setState({editFee:true})}} style={{\"color\":\"green\"}}><i className=\"fas fa-rupee-sign\"></i> {this.state.doctor.doc_fee} <i style={{\"opacity\":\"0.3\",\"cursor\":\"pointer\"}} className=\"fas fa-pencil-alt\"></i> </p>\r\n         :\r\n         <center className=\"row\" style={{\"margin\":\"0px\"}}>\r\n            <label className=\" col-sm-2 col-xs-2 \"><i className=\"fas fa-rupee-sign\"></i></label><input type=\"number\" id={\"Fee\"} className=\"col-sm-6 col-xs-6 \" defaultValue={this.state.doctor.doc_fee} placeholder=\"Your Fee\"/>\r\n            <div className=\"col-sm-2 col-xs-4 btn\" onClick={()=>{\r\n               if(isNaN(document.getElementById(\"Fee\").value))\r\n               return;\r\n               let newDoctor=this.state.doctor;\r\n               newDoctor.doc_fee=document.getElementById(\"Fee\").value;\r\n               this.setState({doctor:newDoctor,changed:true,editFee:false})}} style={{\"color\":\"white\",\"backgroundColor\":\"green\",\"padding\":\"2px\",\"borderRadius\":\"0px 3px 3px 0px\"}}><i className=\"fas fa-check\"></i>\r\n            </div>\r\n         </center>\r\n         }\r\n         <div>\r\n            {!this.state.editAddress?\r\n            <div onClick={()=>{this.setState({editAddress:true})}}><i className=\"fas fa-map-marker-alt\"></i>\r\n               <span style={{\"padding\": \"10px\"}}>\r\n               {this.state.doctor.address_line1}<br/>\r\n               {this.state.doctor.address_line2}<br/>\r\n               {this.state.doctor.city}-{this.props.doctor.pincode} <i style={{\"opacity\":\"0.3\",\"cursor\":\"pointer\"}} className=\"fas fa-pencil-alt\"></i><br/>\r\n               </span>\r\n            </div>\r\n            :\r\n            <div>\r\n               <label><i className=\"fas fa-map-marker-alt\"></i> Edit Location :</label>\r\n               <input style={{\"marginTop\":\"5px\"}} id={\"Add1\"} className=\"col-xs-12 form-control\" defaultValue={this.state.doctor.address_line1} placeholder=\"Address Line1\"/>\r\n               <input style={{\"marginTop\":\"5px\"}} id={\"Add2\"} className=\"col-xs-12 form-control\" defaultValue={this.state.doctor.address_line2} placeholder=\"Address Line2\"/>\r\n               <input style={{\"marginTop\":\"5px\"}} id={\"landMark\"} className=\"col-xs-12 form-control\" defaultValue={this.state.doctor.landmark} placeholder=\"Landmark\"/>\r\n               <input style={{\"marginTop\":\"5px\"}} id={\"city\"} className=\"col-xs-12 form-control\" defaultValue={this.state.doctor.city} placeholder=\"City\"/>\r\n               <input style={{\"marginTop\":\"5px\"}} type=\"number\" id={\"pincode\"} className=\"col-xs-12 form-control\" defaultValue={this.state.doctor.pincode} placeholder=\"Pincode\"/>\r\n               <div className=\"col-xs-12 form-control btn\" onClick={()=>{\r\n                  let newDoctor=this.state.doctor;\r\n                  newDoctor.address_line1=document.getElementById(\"Add1\").value;\r\n                  newDoctor.address_line2=document.getElementById(\"Add2\").value;\r\n                  newDoctor.landmark=document.getElementById(\"landMark\").value;\r\n                  newDoctor.city=document.getElementById(\"city\").value;\r\n                  newDoctor.pincode=document.getElementById(\"pincode\").value;\r\n                  this.setState({doctor:newDoctor,changed:true,editAddress:false})}} style={{\"marginTop\":\"10px\",\"color\":\"white\",\"backgroundColor\":\"#1DA6FD\",\"padding\":\"2px\",\"borderRadius\":\"3px 3px 3px 3px\"}}><i className=\"fas fa-check fa-2x\"></i>\r\n               </div>\r\n            </div>\r\n            }\r\n            <br/>\r\n            <br/>\r\n            <div>\r\n               <label>Email : </label>\r\n               {!this.state.editEmail?<span onClick={()=>{this.setState({editEmail:true})}}>{this.state.doctor.doc_email} <i style={{\"opacity\":\"0.3\",\"cursor\":\"pointer\"}} className=\"fas fa-pencil-alt\"></i></span>:\r\n               <div style={{\"overflow\":\"hidden\"}}>\r\n                  <br/>\r\n                  <input type=\"email\" style={{\"marginTop\":\"5px\",\"float\":\"left\",\"width\":\"80%\"}} className=\"form-control\" id={\"email\"} defaultValue={this.state.doctor.doc_email} placeholder=\"Email Id\"/>\r\n                  <div className=\"btn\" onClick={()=>{\r\n                     let newDoctor=this.state.doctor;\r\n                     newDoctor.doc_email=document.getElementById(\"email\").value;\r\n                     this.setState({doctor:newDoctor,changed:true,editEmail:false})}} style={{\"float\":\"left\",\"width\":\"20%\",\"marginTop\":\"5px\",\"color\":\"white\",\"backgroundColor\":\"#1DA6FD\",\"padding\":\"6px\",\"borderRadius\":\"5px 5px 5px 5px\"}}><i className=\"fas fa-check\"></i>\r\n                  </div>\r\n               </div>\r\n               }\r\n            </div>\r\n         </div>\r\n         <br/>\r\n         <div style={{\"color\":\"#800080\"}}>\r\n            <label>Phone Number : </label>\r\n            {!this.state.editPhone?<span onClick={()=>{this.setState({editPhone:true})}}>{this.state.doctor.doc_phone} <i style={{\"opacity\":\"0.3\",\"cursor\":\"pointer\"}} className=\"fas fa-pencil-alt\"></i></span>:\r\n            <div style={{\"overflow\":\"hidden\"}}>\r\n               <input type=\"number\" style={{\"marginTop\":\"5px\",\"float\":\"left\",\"width\":\"80%\"}} className=\"form-control\" id={\"phone\"} defaultValue={this.state.doctor.doc_phone} placeholder=\"Phone Number\"/>\r\n               <div className=\"btn\" onClick={()=>{\r\n                  let newDoctor=this.state.doctor;\r\n                  newDoctor.doc_phone=document.getElementById(\"phone\").value;\r\n                  this.setState({doctor:newDoctor,changed:true,editPhone:false})}} style={{\"float\":\"left\",\"width\":\"20%\",\"marginTop\":\"5px\",\"color\":\"white\",\"backgroundColor\":\"#1DA6FD\",\"padding\":\"6px\",\"borderRadius\":\"5px 5px 5px 5px\"}}><i className=\"fas fa-check\"></i>\r\n               </div>\r\n            </div>\r\n            }\r\n            <br/>\r\n         </div>\r\n      </div>\r\n      <br/>\r\n      </div>\r\n      <div style={{\"overflow\":\"hidden\",\"width\":\"100%\"}}>\r\n         <div className=\"foot\" style={{\"width\":\"100%\"}}>\r\n            <center>\r\n               <div className=\"col-md-8  col-sm-6\">\r\n               </div>\r\n               <div className=\"col-md-4 col-sm-6\" >\r\n                  <div style={{}}>\r\n                     {this.state.changed?<span onClick={()=>{this.save()}} className=\"btn\" id={\"save\"} style={{\"color\":\"white\",\"backgroundColor\":\"#5d00ff\",\"width\":\"100%\"}}>Save</span>:\r\n                     <span className=\"btn disabled\" id={\"save\"} style={{\"color\":\"white\",\"backgroundColor\":\"#5d00ff\",\"width\":\"100%\"}}>Save</span>}\r\n                  </div>\r\n               </div>\r\n            </center>\r\n         </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Doctor;","import React , {Component}  from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './App.css';\r\nimport Doctor from './edit';\r\nclass App extends Component\r\n{\r\nconstructor(props)\r\n{\r\n  super(props);\r\n  this.state=\r\n  {\r\n   doctor: null\r\n  };\r\n}\r\n\r\n//fetching data from api//\r\n\r\ncomponentWillMount() {\r\n  fetch('http://www.mocky.io/v2/5d1483282f00007405c4f13d')\r\n  .then(res => res.json())\r\n  .then((datas) => {\r\n     datas.forEach((data)=>{//analyzing the recieced data setting up hospital lists for hospitals ,getting all the cities etc\r\n     \tif(data.doc_id===localStorage.doc_id)\r\n     \t{\r\n        if((data.from_hospital===1))\r\n          {\r\n            data.isHospital=1;\r\n            data.doc_List=[];\r\n            \r\n            datas.forEach((childData)=>{\r\n            \r\n              if((childData.doc_id!==childData.hospital_id)&&(childData.hospital_id===data.hospital_id))\r\n              {\r\n                data.doc_List[data.doc_List.length]=childData;\r\n              }\r\n            });\r\n          }\r\n        else\r\n          data.isHospital=0;\r\n        data.specialisation=data.specialisation.split(\",\");\r\n        this.setState({ doctor: data});\r\n        \r\n        }\r\n\r\n      });\r\n     \r\n    \r\n   \r\n  });\r\n  \r\n\r\n}\r\nrender()\r\n{\r\n \r\nconst doctor=this.state.doctor;\r\nreturn(\r\n<div className=\"container\" style={{\"marginTop\":\"5px\"}} >\r\n<br/>\r\n\t{doctor!==null?\r\n    <div>\r\n      <h1 className=\"headings\">My Profile</h1>\r\n      <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames=\"fade\"\r\n      >\r\n        <Doctor\r\n              doctor={doctor}\r\n              fromList={false}\r\n        />\r\n      </CSSTransition>\r\n      <h1 className=\"headings\">My Slots</h1><br/>\r\n      <h1 className=\"headings\">My History</h1><br/>\r\n      <h1 className=\"headings\">My Review</h1><br/>\r\n    </div>:\r\n    <h1>You Are Not Authorized To View This Page</h1>\r\n  }\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n);\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport list from './list';\nimport doctor from './doctor';\nimport dashboard from './dashboard'\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n        <BrowserRouter>\n <Switch>\n \t\t<Route path=\"/doctor/dashboard\" component={ dashboard } />\n \t\t<Route path=\"/doctor/:id\" component={ doctor } />\n \t\t<Route path=\"/doctor_list\" component={ list } />\n        <Route path=\"/\" component={ App } />\n        \n        \n   </Switch>\n</BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}